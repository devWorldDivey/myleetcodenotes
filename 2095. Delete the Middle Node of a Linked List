# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        temp = head
        countofnodes = 0
        while temp:
            countofnodes += 1
            temp = temp.next
        midnode = countofnodes//2
        print(midnode)
        if midnode == 0:
            return
        curr = head
        prev = head
        for _ in range(midnode):
            prev = curr
            curr = curr.next        
        prev.next = curr.next
        return head
